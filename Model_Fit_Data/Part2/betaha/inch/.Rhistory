melt_amp_pigs$lower_amp <- unlist(lapply(1:nrow(melt_amp_pigs), function(i) prop.test(melt_amp_pigs$IsolPos[i],melt_amp_pigs$N[i])[[6]][[1]]))
melt_amp_pigs$upper_amp <- unlist(lapply(1:nrow(melt_amp_pigs), function(i) prop.test(melt_amp_pigs$IsolPos[i],melt_amp_pigs$N[i])[[6]][[2]]))
#Rename the columns
colnames(melt_amp_pigs) <- c("Country", "Year", "ResPropAnim", "Usage", "N", "IsolPos", "ResPropHum", "Lower_Amp", "Upper_Amp")
melt_amp_pigs$Usage <- melt_amp_pigs$Usage/1000 #Change from mg/PCU to g/PCU
ggplot(melt_amp_pigs, aes(x = Usage, y= ResPropAnim, color = Country)) + geom_point() +
scale_x_continuous(expand = c(0, 0), limits = c(0,0.055)) + scale_y_continuous(expand = c(0, 0), limits = c(0,1)) +
labs(x ="Livestock Antibiotic Usage (g/PCU)", y = "Antibiotic-Resistant Livestock Carriage")
# Food Usage Dataset ------------------------------------------------------
#country_data_imp <- read.csv("FullData_2021_v1_trim.csv") #This is data for pigs
country_data_imp <- read.csv("ImportDat_AmpPigs_update.csv") #This is data for pigs
country_data_imp[country_data_imp$Country_of_Origin == "UK Origin",23] <- NA
isolamp_hum_raw <- read.csv("UK_parameterisation.csv")
UK_hum_ampres <- rowMeans(isolamp_hum_raw[,25:28], na.rm = T)[2]
UK_amp_res <- as.numeric(rowMeans(isolamp_hum_raw[isolamp_hum_raw$Country_of_Origin == "UK Livestock",25:28], na.rm = T ))
UK_amp_usage <- as.numeric(rowMeans(isolamp_hum_raw[isolamp_hum_raw$Country_of_Origin == "UK Livestock",29:32]))/1000
UK_cont <- as.numeric(isolamp_hum_raw[isolamp_hum_raw$Country_of_Origin == "UK Livestock",24])
UK_food_usage <- isolamp_hum_raw[isolamp_hum_raw$Country_of_Origin == "UK Livestock",2]
UK_food_usage <- isolamp_hum_raw[isolamp_hum_raw$Country_of_Origin == "UK Livestock",2]
UK_food_pig_usage <- isolamp_hum_raw[isolamp_hum_raw$Country_of_Origin == "UK Livestock",4]
#Use the mean for the EU as the parameters (minus the UK) - only the main importers
EU_cont <- mean(rowMeans(country_data_imp[,24:27], na.rm = T))
EU_res <- mean(rowMeans(country_data_imp[28:31], na.rm = T))
max(country_data_imp[24:27], na.rm = T)
country_data_imp[1, 25] <- NA
country_data_imp$FBD_gen <- rowMeans(country_data_imp[,24:27], na.rm = T)
country_data_imp$FBD_res <- rowMeans(country_data_imp[,28:31], na.rm = T)
# Import in Parameters and Set Baseline Parms -----------------------------
setwd("/Users/amorgan/Documents/PhD_Work/Chapter-3/Model_Fit_Data/Part2/betaha/inch")
post_amp <- read.csv(tail(list.files(path = "/Users/amorgan/Documents/PhD_Work/Chapter-3/Model_Fit_Data/Part2/betaha/inch", pattern = "complex"), 1))
MAP_parms <- map_estimate(post_amp)
MAP_parms <- data.frame("Parameter" = names(post_amp),
"MAP_Estimate" = colMeans(post_amp))
hdi_parm <- hdi(post_amp, credMass = 0.95)
amp_post <- do.call(rbind,
lapply(list.files(path = "/Users/amorgan/Documents/PhD_Work/Chapter-3/Model_Fit_Data/Part2/betaha/inch", pattern = "complex"), read.csv))
amp_post$gen <- as.vector(sapply(1:(nrow(amp_post)/nrow(read.csv(tail(list.files(path = "/Users/amorgan/Documents/PhD_Work/Chapter-3/Model_Fit_Data/Part2/betaha/inch", pattern = "complex"), 1)))),
function(x) rep(paste0("gen_",x), nrow(read.csv(tail(list.files(path = "/Users/amorgan/Documents/PhD_Work/Chapter-3/Models/Chapter-3/Model_Fit_Data/Part2/betaha/inch", pattern = "complex"), 1))))))
l_amp_post <- lapply(1:length(colnames(amp_post)[-1]), function(x) melt(amp_post, id.vars = "gen", measure.vars = colnames(amp_post)[x])[,c(1,3)])
names = c(expression(paste("Rate of Animal-to-Animal Transmission (", beta[AA], ")")),
expression(paste("Rate of Antibiotic-Resistant to Antibiotic-Sensitive Reversion (", phi, ")")),
expression(paste("Efficacy of Antibiotic-Mediated Animal Recovery (", kappa, ")")),
expression(paste("Transmission-related Antibiotic Resistant Fitness Cost (", alpha, ")")),
expression(paste("Background Infection Rate (", zeta, ")")),
expression(paste("Rate of Domestic Animal-to-Human Transmission (", beta[HA], ")")),
expression(paste("Proportion of non-EU Imports Contaminated (", Imp[nonEU], ")")),
expression(paste("Proportion of Contaminated non-EU Imports Resistant (", PropRes[nonEU], ")")))
amp_p_list <- list()
for(i in 1:length(names)){
amp_p_list[[i]] <- ggplot(l_amp_post[[i]], aes(x=value, fill= gen)) + geom_density(alpha=.5) +
scale_x_continuous(expand = c(0, 0), name = names[i]) +
scale_y_continuous(expand = c(0, 0), name = "") +
labs(fill = NULL) + scale_fill_discrete(labels = sapply(1:length(unique(amp_post$gen)), function(x) paste0("Generation ", x)))+
theme(legend.text=element_text(size=14),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x= element_text(size=14), plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"))
}
ggarrange(amp_p_list[[1]], amp_p_list[[2]], amp_p_list[[3]],
amp_p_list[[4]], amp_p_list[[5]], amp_p_list[[6]],
amp_p_list[[7]], amp_p_list[[8]], nrow = 3, ncol = 3,
common.legend = TRUE, legend = "bottom")
l_amp_post
lapply(1:length(colnames(amp_post)[-1]), function(x) melt(amp_post, id.vars = "gen", measure.vars = colnames(amp_post)[x])[,c(1,3)])
amp_post
as.vector(sapply(1:(nrow(amp_post)/nrow(read.csv(tail(list.files(path = "/Users/amorgan/Documents/PhD_Work/Chapter-3/Model_Fit_Data/Part2/betaha/inch", pattern = "complex"), 1)))),
function(x) rep(paste0("gen_",x), nrow(read.csv(tail(list.files(path = "/Users/amorgan/Documents/PhD_Work/Chapter-3/Models/Chapter-3/Model_Fit_Data/Part2/betaha/inch", pattern = "complex"), 1))))))
amp_post$gen <- as.vector(sapply(1:(nrow(amp_post)/nrow(read.csv(tail(list.files(path = "/Users/amorgan/Documents/PhD_Work/Chapter-3/Model_Fit_Data/Part2/betaha/inch", pattern = "complex"), 1)))),
function(x) rep(paste0("gen_",x), nrow(read.csv(tail(list.files(path = "/Users/amorgan/Documents/PhD_Work/Chapter-3/Model_Fit_Data/Part2/betaha/inch", pattern = "complex"), 1))))))
l_amp_post <- lapply(1:length(colnames(amp_post)[-1]), function(x) melt(amp_post, id.vars = "gen", measure.vars = colnames(amp_post)[x])[,c(1,3)])
names = c(expression(paste("Rate of Animal-to-Animal Transmission (", beta[AA], ")")),
expression(paste("Rate of Antibiotic-Resistant to Antibiotic-Sensitive Reversion (", phi, ")")),
expression(paste("Efficacy of Antibiotic-Mediated Animal Recovery (", kappa, ")")),
expression(paste("Transmission-related Antibiotic Resistant Fitness Cost (", alpha, ")")),
expression(paste("Background Infection Rate (", zeta, ")")),
expression(paste("Rate of Domestic Animal-to-Human Transmission (", beta[HA], ")")),
expression(paste("Proportion of non-EU Imports Contaminated (", Imp[nonEU], ")")),
expression(paste("Proportion of Contaminated non-EU Imports Resistant (", PropRes[nonEU], ")")))
amp_p_list <- list()
for(i in 1:length(names)){
amp_p_list[[i]] <- ggplot(l_amp_post[[i]], aes(x=value, fill= gen)) + geom_density(alpha=.5) +
scale_x_continuous(expand = c(0, 0), name = names[i]) +
scale_y_continuous(expand = c(0, 0), name = "") +
labs(fill = NULL) + scale_fill_discrete(labels = sapply(1:length(unique(amp_post$gen)), function(x) paste0("Generation ", x)))+
theme(legend.text=element_text(size=14),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x= element_text(size=14), plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"))
}
#Generate the Means or the MAPs for each parameter
#MAP_parms <- map_estimate(amp_post[amp_post$gen == "gen_6",][, -ncol(amp_post)])
#Initial Conditions
parmtau <- seq(0, 0.01, by = 0.001)
init = c(Sa=0.98, Isa=0.01, Ira=0.01,
Sh = 1,
IshDA = 0,IrhDA = 0,
IshA1 = 0,IrhA1 = 0,
IshA2 = 0,IrhA2 = 0,
IshA3 = 0,IrhA3 = 0,
IshA4 = 0,IrhA4 = 0,
IshA5 = 0,IrhA5 = 0,
IshA6 = 0,IrhA6 = 0,
IshA7 = 0,IrhA7 = 0,
IshA8 = 0,IrhA8 = 0,
IshA9 = 0,IrhA9 = 0,
IshAnEU = 0,IrhAnEU = 0)
output2 <- data.frame(matrix(ncol = 26, nrow = 0))
plot_analysis <- list()
for (j in 1:2) {
parmtau <- list(melt_amp_pigs$Usage,
seq(0, 0.014, by = 0.001))[[j]]
plot_analysis[[j]] <- local({
for (i in 1:length(parmtau)) {
temp <- data.frame(matrix(NA, nrow = 1, ncol=26))
parms = c(ra = 60^-1, rh = (5.5^-1), ua = 240^-1, uh = 28835^-1, psi = 0.656,
share1 = country_data_imp[2,"Normalised_Usage_2018"], share2 = country_data_imp[3,"Normalised_Usage_2018"], share3 = country_data_imp[4,"Normalised_Usage_2018"],
share4 = country_data_imp[5,"Normalised_Usage_2018"], share5 = country_data_imp[6,"Normalised_Usage_2018"], share6 = country_data_imp[7,"Normalised_Usage_2018"],
share7 = country_data_imp[8,"Normalised_Usage_2018"], share8 = country_data_imp[9,"Normalised_Usage_2018"],
share9 = country_data_imp[10,"Normalised_Usage_2018"], share_nEU = 1 - sum(country_data_imp[2:10,"Normalised_Usage_2018"]),
betaAA = MAP_parms["betaAA", 2], phi = MAP_parms["phi", 2], kappa = MAP_parms["kappa", 2], alpha = MAP_parms["alpha", 2],
zeta = MAP_parms["zeta", 2], betaHA = MAP_parms["betaHA", 2], imp_nEU = MAP_parms["imp_nEU", 2], propres_impnEU = MAP_parms["propres_impnEU", 2],
fracimp1 = country_data_imp[2,"FBD_gen"], fracimp2 = country_data_imp[3,"FBD_gen"], fracimp3 = country_data_imp[4,"FBD_gen"],
fracimp4 = country_data_imp[5,"FBD_gen"], fracimp5 = country_data_imp[6,"FBD_gen"], fracimp6 = country_data_imp[7,"FBD_gen"],
fracimp7 = country_data_imp[8,"FBD_gen"], fracimp8 = country_data_imp[9,"FBD_gen"],
fracimp9 = country_data_imp[9,"FBD_gen"], fracimp_nEU = country_data_imp[10,"FBD_gen"],
propres_imp1 = country_data_imp[2,"FBD_res"], propres_imp2 = country_data_imp[3,"FBD_res"], propres_imp3 = country_data_imp[4,"FBD_res"], propres_imp4 = country_data_imp[5,"FBD_res"],
propres_imp5 = country_data_imp[6,"FBD_res"], propres_imp6 = country_data_imp[7,"FBD_res"], propres_imp7 = country_data_imp[8,"FBD_res"], propres_imp8 = country_data_imp[9,"FBD_res"],
propres_imp9 = country_data_imp[10,"FBD_res"],
eta = 0.11016, tau = parmtau[i])
out <- runsteady(y = init, func = amrimp, times = c(0, Inf), parms = parms)
temp[1,1] <- parmtau[i]
temp[1,2:12] <- out[[1]][seq(6, 26, by = 2)]/ sum(out[[1]][5:26])
temp[1,13:23] <- sapply(seq(5,25, by = 2), function(x) out[[1]][x]) + sapply(seq(6,26, by = 2), function(x) out[[1]][x])
temp[1,24] <- sum(out[[1]][seq(6, 26, by = 2)])/ sum(out[[1]][5:26])
temp[1,25] <- out[[1]][3] / sum(out[[1]][2:3])
temp[1,26] <- sum(out[[1]][2:3])
print(paste0("Run ", j, ": ",temp[1,2]))
output2 <- rbind.data.frame(output2, temp)
}
colnames(output2)[1:26] <- c("tau",
"PropRes_Domestic","PropRes_Netherlands","PropRes_Ireland","PropRes_Germany","PropRes_France","PropRes_Spain","PropRes_Italy",
"PropRes_Belgium","PropRes_Poland","PropRes_Denmark","PropRes_NonEU",
"TotInf_Domestic","TotInf_Netherlands","TotInf_Ireland","TotInf_Germany","TotInf_France","TotInf_Spain","TotInf_Italy",
"TotInf_Belgium","TotInf_Poland","TotInf_Denmark","TotInf_NonEU",
"Res_PropHum", "Res_PropAnim", "Anim_Inf")
return(output2)
})
}
resistance_data <- plot_analysis[[2]]
norm_names <- sapply(1:11, function(x) paste0(substring(colnames(resistance_data)[13:23], 8)[x], "_res_norm"))
resistance_data[c(norm_names)] <- (resistance_data[2:12]*(sum(resistance_data[13:23])))/
rowSums((resistance_data[2:12]*(sum(resistance_data[13:23]))))
resistance_data[resistance_data$tau == UK_amp_usage,27:37]
resistance_data[resistance_data$tau == 0,27:37]
?runsteady
install.packages("rootSolve")
library("rootSolve")
init = c(Sa=0.98, Isa=0.01, Ira=0.01,
Sh = 1,
IshDA = 0,IrhDA = 0,
IshA1 = 0,IrhA1 = 0,
IshA2 = 0,IrhA2 = 0,
IshA3 = 0,IrhA3 = 0,
IshA4 = 0,IrhA4 = 0,
IshA5 = 0,IrhA5 = 0,
IshA6 = 0,IrhA6 = 0,
IshA7 = 0,IrhA7 = 0,
IshA8 = 0,IrhA8 = 0,
IshA9 = 0,IrhA9 = 0,
IshAnEU = 0,IrhAnEU = 0)
thetaparm = c(ra = 60^-1, rh = (5.5^-1), ua = 240^-1, uh = 28835^-1, psi = 0.656,
share1 = country_data_imp[2,"Normalised_Usage_2018"], share2 = country_data_imp[3,"Normalised_Usage_2018"], share3 = country_data_imp[4,"Normalised_Usage_2018"],
share4 = country_data_imp[5,"Normalised_Usage_2018"], share5 = country_data_imp[6,"Normalised_Usage_2018"], share6 = country_data_imp[7,"Normalised_Usage_2018"],
share7 = country_data_imp[8,"Normalised_Usage_2018"], share8 = country_data_imp[9,"Normalised_Usage_2018"],
share9 = country_data_imp[10,"Normalised_Usage_2018"], share_nEU = 1 - sum(country_data_imp[2:10,"Normalised_Usage_2018"]),
betaAA = MAP_parms["betaAA", 2], phi = MAP_parms["phi", 2], kappa = MAP_parms["kappa", 2], alpha = MAP_parms["alpha", 2],
zeta = MAP_parms["zeta", 2], betaHA = MAP_parms["betaHA", 2], imp_nEU = MAP_parms["imp_nEU", 2], propres_impnEU = MAP_parms["propres_impnEU", 2],
fracimp1 = country_data_imp[2,"FBD_gen"], fracimp2 = country_data_imp[3,"FBD_gen"], fracimp3 = country_data_imp[4,"FBD_gen"],
fracimp4 = country_data_imp[5,"FBD_gen"], fracimp5 = country_data_imp[6,"FBD_gen"], fracimp6 = country_data_imp[7,"FBD_gen"],
fracimp7 = country_data_imp[8,"FBD_gen"], fracimp8 = country_data_imp[9,"FBD_gen"],
fracimp9 = country_data_imp[9,"FBD_gen"], fracimp_nEU = country_data_imp[10,"FBD_gen"],
propres_imp1 = country_data_imp[2,"FBD_res"], propres_imp2 = country_data_imp[3,"FBD_res"], propres_imp3 = country_data_imp[4,"FBD_res"], propres_imp4 = country_data_imp[5,"FBD_res"],
propres_imp5 = country_data_imp[6,"FBD_res"], propres_imp6 = country_data_imp[7,"FBD_res"], propres_imp7 = country_data_imp[8,"FBD_res"], propres_imp8 = country_data_imp[9,"FBD_res"],
propres_imp9 = country_data_imp[10,"FBD_res"],
eta = 0.11016, tau = UK_amp_usage)
tau_range <- seq(0, 0.01, by = 0.001)
tauoutput_inc <- data.frame(matrix(nrow = length(tau_range), ncol = 16))
out <- runsteady(y = init, func = amrimp, times = c(0, Inf), parms = thetaparm)
for (i in 1:length(tau_range)) {
thetaparm["tau"] = tau_range[i]
out <- runsteady(y = init, func = amrimp_inc, times = c(0, Inf), parms = thetaparm)
tauoutput_inc[i,] <- c(tau_range[i],
((out[[2]] + out[[2+11]])*(446000000))/100000,
((out[[3]] + out[[3+11]])*(446000000))/100000,
((out[[4]] + out[[4+11]])*(446000000))/100000,
((out[[5]] + out[[5+11]])*(446000000))/100000,
((out[[6]] + out[[6+11]])*(446000000))/100000,
((out[[7]] + out[[7+11]])*(446000000))/100000,
((out[[8]] + out[[8+11]])*(446000000))/100000,
((out[[9]] + out[[9+11]])*(446000000))/100000,
((out[[10]] + out[[10+11]])*(446000000))/100000,
((out[[11]] + out[[11+11]])*(446000000))/100000,
((out[[12]] + out[[12+11]])*(446000000))/100000,
((out[[24]] + out[[25]])*(446000000))/100000,
(out[[1]][["Isa"]] + out[[1]][["Ira"]]),
out[[1]][["Ira"]] / (out[[1]][["Isa"]] + out[[1]][["Ira"]]),
sum(out[[1]][seq(6, 26, by = 2)]) / (sum(out[[1]][5:26])))
}
colnames(tauoutput_inc) <- c("tau", "Domestic", sapply(1:9, function(x) paste0("Country ", x)),"nonEU",
"IncH",
"ICombA", "ResPropAnim", "ResPropHum")
tauoutput_inc[tauoutput_inc$tau == UK_amp_usage,][2:12]
tauoutput_inc[tauoutput_inc$tau == UK_amp_usage,][2:12]/sum(tauoutput_inc[tauoutput_inc$tau == UK_amp_usage,][2:12])
tauoutput_inc[tauoutput_inc$tau == 0,][2:12]
tauoutput_inc[tauoutput_inc$tau == 0,][2:12]/sum(tauoutput_inc[tauoutput_inc$tau == UK_amp_usage,][2:12])
tauoutput_inc[tauoutput_inc$tau == 0,]
inf_plotdata <- melt(tauoutput_inc, id.vars = c("tau"), measure.vars = names(tauoutput_inc)[2:12])
#inf_plotdata$variable <- factor(names(tauoutput)[2:12], levels = unique(names(tauoutput)[2:12]))
inf_comb <- ggplot(inf_plotdata, aes(fill = variable, x = tau, y = value)) + theme_bw() +
geom_col(color = "black",position= "stack", width  = 0.001) +
scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0), limits = c(0 , 1)) +
labs(x ="Ampicillin Sales in Fattening Pig (g/PCU)", y = "Total Human Salmenollosis (per 100,000)", fill = "Resistance Source") +
theme(legend.position= "bottom", legend.text=element_text(size=12), legend.title =element_text(size=12), axis.text=element_text(size=12),
axis.title.y=element_text(size=12), axis.title.x= element_text(size=12), plot.margin = unit(c(0.35,1,0.35,1), "cm"),
legend.spacing.x = unit(0.3, 'cm')) +
geom_vline(xintercept = UK_amp_usage, size = 1.2, col = "red", lty = 2)
inf_comb
p_comb_res <- ggarrange(p_rib_amp_pig, inf_comb, res_comb, labels = c("A", "B", "C"), font.label = c(size = 20),
nrow = 3, ncol = 1)
res_comb
#Initial Conditions
parmtau <- seq(0, 0.01, by = 0.001)
init = c(Sa=0.98, Isa=0.01, Ira=0.01,
Sh = 1,
IshDA = 0,IrhDA = 0,
IshA1 = 0,IrhA1 = 0,
IshA2 = 0,IrhA2 = 0,
IshA3 = 0,IrhA3 = 0,
IshA4 = 0,IrhA4 = 0,
IshA5 = 0,IrhA5 = 0,
IshA6 = 0,IrhA6 = 0,
IshA7 = 0,IrhA7 = 0,
IshA8 = 0,IrhA8 = 0,
IshA9 = 0,IrhA9 = 0,
IshAnEU = 0,IrhAnEU = 0)
output2 <- data.frame(matrix(ncol = 26, nrow = 0))
plot_analysis <- list()
for (j in 1:2) {
parmtau <- list(melt_amp_pigs$Usage,
seq(0, 0.014, by = 0.001))[[j]]
plot_analysis[[j]] <- local({
for (i in 1:length(parmtau)) {
temp <- data.frame(matrix(NA, nrow = 1, ncol=26))
parms = c(ra = 60^-1, rh = (5.5^-1), ua = 240^-1, uh = 28835^-1, psi = 0.656,
share1 = country_data_imp[2,"Normalised_Usage_2018"], share2 = country_data_imp[3,"Normalised_Usage_2018"], share3 = country_data_imp[4,"Normalised_Usage_2018"],
share4 = country_data_imp[5,"Normalised_Usage_2018"], share5 = country_data_imp[6,"Normalised_Usage_2018"], share6 = country_data_imp[7,"Normalised_Usage_2018"],
share7 = country_data_imp[8,"Normalised_Usage_2018"], share8 = country_data_imp[9,"Normalised_Usage_2018"],
share9 = country_data_imp[10,"Normalised_Usage_2018"], share_nEU = 1 - sum(country_data_imp[2:10,"Normalised_Usage_2018"]),
betaAA = MAP_parms["betaAA", 2], phi = MAP_parms["phi", 2], kappa = MAP_parms["kappa", 2], alpha = MAP_parms["alpha", 2],
zeta = MAP_parms["zeta", 2], betaHA = MAP_parms["betaHA", 2], imp_nEU = MAP_parms["imp_nEU", 2], propres_impnEU = MAP_parms["propres_impnEU", 2],
fracimp1 = country_data_imp[2,"FBD_gen"], fracimp2 = country_data_imp[3,"FBD_gen"], fracimp3 = country_data_imp[4,"FBD_gen"],
fracimp4 = country_data_imp[5,"FBD_gen"], fracimp5 = country_data_imp[6,"FBD_gen"], fracimp6 = country_data_imp[7,"FBD_gen"],
fracimp7 = country_data_imp[8,"FBD_gen"], fracimp8 = country_data_imp[9,"FBD_gen"],
fracimp9 = country_data_imp[9,"FBD_gen"], fracimp_nEU = country_data_imp[10,"FBD_gen"],
propres_imp1 = country_data_imp[2,"FBD_res"], propres_imp2 = country_data_imp[3,"FBD_res"], propres_imp3 = country_data_imp[4,"FBD_res"], propres_imp4 = country_data_imp[5,"FBD_res"],
propres_imp5 = country_data_imp[6,"FBD_res"], propres_imp6 = country_data_imp[7,"FBD_res"], propres_imp7 = country_data_imp[8,"FBD_res"], propres_imp8 = country_data_imp[9,"FBD_res"],
propres_imp9 = country_data_imp[10,"FBD_res"],
eta = 0.11016, tau = parmtau[i])
out <- runsteady(y = init, func = amrimp, times = c(0, Inf), parms = parms)
temp[1,1] <- parmtau[i]
temp[1,2:12] <- out[[1]][seq(6, 26, by = 2)]/ sum(out[[1]][5:26])
temp[1,13:23] <- sapply(seq(5,25, by = 2), function(x) out[[1]][x]) + sapply(seq(6,26, by = 2), function(x) out[[1]][x])
temp[1,24] <- sum(out[[1]][seq(6, 26, by = 2)])/ sum(out[[1]][5:26])
temp[1,25] <- out[[1]][3] / sum(out[[1]][2:3])
temp[1,26] <- sum(out[[1]][2:3])
print(paste0("Run ", j, ": ",temp[1,2]))
output2 <- rbind.data.frame(output2, temp)
}
colnames(output2)[1:26] <- c("tau",
"PropRes_Domestic","PropRes_Netherlands","PropRes_Ireland","PropRes_Germany","PropRes_France","PropRes_Spain","PropRes_Italy",
"PropRes_Belgium","PropRes_Poland","PropRes_Denmark","PropRes_NonEU",
"TotInf_Domestic","TotInf_Netherlands","TotInf_Ireland","TotInf_Germany","TotInf_France","TotInf_Spain","TotInf_Italy",
"TotInf_Belgium","TotInf_Poland","TotInf_Denmark","TotInf_NonEU",
"Res_PropHum", "Res_PropAnim", "Anim_Inf")
return(output2)
})
}
resistance_data <- plot_analysis[[2]]
norm_names <- sapply(1:11, function(x) paste0(substring(colnames(resistance_data)[13:23], 8)[x], "_res_norm"))
resistance_data[c(norm_names)] <- (resistance_data[2:12]*(sum(resistance_data[13:23])))/
rowSums((resistance_data[2:12]*(sum(resistance_data[13:23]))))
resistance_data[resistance_data$tau == UK_amp_usage,27:37]
resistance_data[resistance_data$tau == 0,27:37]
#Non-normalized Resistance
res_plotdata <- melt(resistance_data, id.vars = c("tau"), measure.vars = colnames(resistance_data)[2:12])
trim_names <- as.factor(sapply(strsplit(as.character(res_plotdata$variable), split = "_", fixed = TRUE), function(x) x[2]))
trim_names <- c(rep("Domestic", 15), c(sapply(1:9, function(x) rep(paste0("Country ",x), 15))), c(rep("nonEU", 15)))
res_plotdata$variable <- factor(trim_names, levels = unique(trim_names))
#Normalized Resistance
res_norm_plotdata <- melt(resistance_data, id.vars = c("tau"), measure.vars = colnames(resistance_data)[27:37])
res_norm_plotdata$variable <- factor(trim_names, levels = unique(trim_names))
# Main Attribution Plots --------------------------------------------------
#Un-normalised resistance
res_comb <- ggplot(res_plotdata, aes(fill = variable, x = tau, y = value)) + theme_bw() +
geom_col(color = "black",position= "stack", width  = 0.001) +
scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0)) +
theme(legend.position= "bottom", legend.text=element_text(size=12), legend.title =element_text(size=12), axis.text=element_text(size=12),
axis.title.y=element_text(size=12), axis.title.x= element_text(size=12), plot.margin = unit(c(0.35,1,0.35,1), "cm"),
legend.spacing.x = unit(0.3, 'cm'))  +
labs(x ="Domestic Ampicillin Usage in Fattening Pig (g/PCU)", y = "Proportion of Human Salmnellosis Resistant to Ampicillin", fill = "Resistance Source")  +
geom_vline(xintercept = UK_amp_usage, size = 1.2, col = "red", lty = 2)
res_comb
res_plotdata
out
sum(out[[1]][5:26])
output2 <- data.frame(matrix(ncol = 26, nrow = 0))
plot_analysis <- list()
for (j in 1:2) {
parmtau <- list(melt_amp_pigs$Usage,
seq(0, 0.014, by = 0.001))[[j]]
plot_analysis[[j]] <- local({
for (i in 1:length(parmtau)) {
temp <- data.frame(matrix(NA, nrow = 1, ncol=26))
parms = c(ra = 60^-1, rh = (5.5^-1), ua = 240^-1, uh = 28835^-1, psi = 0.656,
share1 = country_data_imp[2,"Normalised_Usage_2018"], share2 = country_data_imp[3,"Normalised_Usage_2018"], share3 = country_data_imp[4,"Normalised_Usage_2018"],
share4 = country_data_imp[5,"Normalised_Usage_2018"], share5 = country_data_imp[6,"Normalised_Usage_2018"], share6 = country_data_imp[7,"Normalised_Usage_2018"],
share7 = country_data_imp[8,"Normalised_Usage_2018"], share8 = country_data_imp[9,"Normalised_Usage_2018"],
share9 = country_data_imp[10,"Normalised_Usage_2018"], share_nEU = 1 - sum(country_data_imp[2:10,"Normalised_Usage_2018"]),
betaAA = MAP_parms["betaAA", 2], phi = MAP_parms["phi", 2], kappa = MAP_parms["kappa", 2], alpha = MAP_parms["alpha", 2],
zeta = MAP_parms["zeta", 2], betaHA = MAP_parms["betaHA", 2], imp_nEU = MAP_parms["imp_nEU", 2], propres_impnEU = MAP_parms["propres_impnEU", 2],
fracimp1 = country_data_imp[2,"FBD_gen"], fracimp2 = country_data_imp[3,"FBD_gen"], fracimp3 = country_data_imp[4,"FBD_gen"],
fracimp4 = country_data_imp[5,"FBD_gen"], fracimp5 = country_data_imp[6,"FBD_gen"], fracimp6 = country_data_imp[7,"FBD_gen"],
fracimp7 = country_data_imp[8,"FBD_gen"], fracimp8 = country_data_imp[9,"FBD_gen"],
fracimp9 = country_data_imp[9,"FBD_gen"], fracimp_nEU = country_data_imp[10,"FBD_gen"],
propres_imp1 = country_data_imp[2,"FBD_res"], propres_imp2 = country_data_imp[3,"FBD_res"], propres_imp3 = country_data_imp[4,"FBD_res"], propres_imp4 = country_data_imp[5,"FBD_res"],
propres_imp5 = country_data_imp[6,"FBD_res"], propres_imp6 = country_data_imp[7,"FBD_res"], propres_imp7 = country_data_imp[8,"FBD_res"], propres_imp8 = country_data_imp[9,"FBD_res"],
propres_imp9 = country_data_imp[10,"FBD_res"],
eta = 0.11016, tau = parmtau[i])
out <- runsteady(y = init, func = amrimp, times = c(0, Inf), parms = parms)
temp[1,1] <- parmtau[i]
print(out[[1]][6])
temp[1,2:12] <- out[[1]][seq(6, 26, by = 2)]/ sum(out[[1]][5:26])
temp[1,13:23] <- sapply(seq(5,25, by = 2), function(x) out[[1]][x]) + sapply(seq(6,26, by = 2), function(x) out[[1]][x])
temp[1,24] <- sum(out[[1]][seq(6, 26, by = 2)])/ sum(out[[1]][5:26])
temp[1,25] <- out[[1]][3] / sum(out[[1]][2:3])
temp[1,26] <- sum(out[[1]][2:3])
print(paste0("Run ", j, ": ",temp[1,2]))
output2 <- rbind.data.frame(output2, temp)
}
colnames(output2)[1:26] <- c("tau",
"PropRes_Domestic","PropRes_Netherlands","PropRes_Ireland","PropRes_Germany","PropRes_France","PropRes_Spain","PropRes_Italy",
"PropRes_Belgium","PropRes_Poland","PropRes_Denmark","PropRes_NonEU",
"TotInf_Domestic","TotInf_Netherlands","TotInf_Ireland","TotInf_Germany","TotInf_France","TotInf_Spain","TotInf_Italy",
"TotInf_Belgium","TotInf_Poland","TotInf_Denmark","TotInf_NonEU",
"Res_PropHum", "Res_PropAnim", "Anim_Inf")
return(output2)
})
}
#Initial Conditions
parmtau <- seq(0, 0.01, by = 0.001)
init = c(Sa=0.98, Isa=0.01, Ira=0.01,
Sh = 1,
IshDA = 0,IrhDA = 0,
IshA1 = 0,IrhA1 = 0,
IshA2 = 0,IrhA2 = 0,
IshA3 = 0,IrhA3 = 0,
IshA4 = 0,IrhA4 = 0,
IshA5 = 0,IrhA5 = 0,
IshA6 = 0,IrhA6 = 0,
IshA7 = 0,IrhA7 = 0,
IshA8 = 0,IrhA8 = 0,
IshA9 = 0,IrhA9 = 0,
IshAnEU = 0,IrhAnEU = 0)
output2 <- data.frame(matrix(ncol = 26, nrow = 0))
plot_analysis <- list()
for (j in 1:2) {
parmtau <- list(melt_amp_pigs$Usage,
seq(0, 0.014, by = 0.001))[[j]]
plot_analysis[[j]] <- local({
for (i in 1:length(parmtau)) {
temp <- data.frame(matrix(NA, nrow = 1, ncol=26))
parms = c(ra = 60^-1, rh = (5.5^-1), ua = 240^-1, uh = 28835^-1, psi = 0.656,
share1 = country_data_imp[2,"Normalised_Usage_2018"], share2 = country_data_imp[3,"Normalised_Usage_2018"], share3 = country_data_imp[4,"Normalised_Usage_2018"],
share4 = country_data_imp[5,"Normalised_Usage_2018"], share5 = country_data_imp[6,"Normalised_Usage_2018"], share6 = country_data_imp[7,"Normalised_Usage_2018"],
share7 = country_data_imp[8,"Normalised_Usage_2018"], share8 = country_data_imp[9,"Normalised_Usage_2018"],
share9 = country_data_imp[10,"Normalised_Usage_2018"], share_nEU = 1 - sum(country_data_imp[2:10,"Normalised_Usage_2018"]),
betaAA = MAP_parms["betaAA", 2], phi = MAP_parms["phi", 2], kappa = MAP_parms["kappa", 2], alpha = MAP_parms["alpha", 2],
zeta = MAP_parms["zeta", 2], betaHA = MAP_parms["betaHA", 2], imp_nEU = MAP_parms["imp_nEU", 2], propres_impnEU = MAP_parms["propres_impnEU", 2],
fracimp1 = country_data_imp[2,"FBD_gen"], fracimp2 = country_data_imp[3,"FBD_gen"], fracimp3 = country_data_imp[4,"FBD_gen"],
fracimp4 = country_data_imp[5,"FBD_gen"], fracimp5 = country_data_imp[6,"FBD_gen"], fracimp6 = country_data_imp[7,"FBD_gen"],
fracimp7 = country_data_imp[8,"FBD_gen"], fracimp8 = country_data_imp[9,"FBD_gen"],
fracimp9 = country_data_imp[9,"FBD_gen"], fracimp_nEU = country_data_imp[10,"FBD_gen"],
propres_imp1 = country_data_imp[2,"FBD_res"], propres_imp2 = country_data_imp[3,"FBD_res"], propres_imp3 = country_data_imp[4,"FBD_res"], propres_imp4 = country_data_imp[5,"FBD_res"],
propres_imp5 = country_data_imp[6,"FBD_res"], propres_imp6 = country_data_imp[7,"FBD_res"], propres_imp7 = country_data_imp[8,"FBD_res"], propres_imp8 = country_data_imp[9,"FBD_res"],
propres_imp9 = country_data_imp[10,"FBD_res"],
eta = 0.11016, tau = parmtau[i])
out <- runsteady(y = init, func = amrimp, times = c(0, Inf), parms = parms)
temp[1,1] <- parmtau[i]
print(out[[1]][6])
temp[1,2:12] <- out[[1]][seq(10, 26, by = 2)]/ sum(out[[1]][5:26])
temp[1,13:23] <- sapply(seq(5,25, by = 2), function(x) out[[1]][x]) + sapply(seq(6,26, by = 2), function(x) out[[1]][x])
temp[1,24] <- sum(out[[1]][seq(6, 26, by = 2)])/ sum(out[[1]][5:26])
temp[1,25] <- out[[1]][3] / sum(out[[1]][2:3])
temp[1,26] <- sum(out[[1]][2:3])
print(paste0("Run ", j, ": ",temp[1,2]))
output2 <- rbind.data.frame(output2, temp)
}
colnames(output2)[1:26] <- c("tau",
"PropRes_Domestic","PropRes_Netherlands","PropRes_Ireland","PropRes_Germany","PropRes_France","PropRes_Spain","PropRes_Italy",
"PropRes_Belgium","PropRes_Poland","PropRes_Denmark","PropRes_NonEU",
"TotInf_Domestic","TotInf_Netherlands","TotInf_Ireland","TotInf_Germany","TotInf_France","TotInf_Spain","TotInf_Italy",
"TotInf_Belgium","TotInf_Poland","TotInf_Denmark","TotInf_NonEU",
"Res_PropHum", "Res_PropAnim", "Anim_Inf")
return(output2)
})
}
plot_analysis <- list()
for (j in 1:2) {
parmtau <- list(melt_amp_pigs$Usage,
seq(0, 0.014, by = 0.001))[[j]]
plot_analysis[[j]] <- local({
for (i in 1:length(parmtau)) {
temp <- data.frame(matrix(NA, nrow = 1, ncol=26))
parms = c(ra = 60^-1, rh = (5.5^-1), ua = 240^-1, uh = 28835^-1, psi = 0.656,
share1 = country_data_imp[2,"Normalised_Usage_2018"], share2 = country_data_imp[3,"Normalised_Usage_2018"], share3 = country_data_imp[4,"Normalised_Usage_2018"],
share4 = country_data_imp[5,"Normalised_Usage_2018"], share5 = country_data_imp[6,"Normalised_Usage_2018"], share6 = country_data_imp[7,"Normalised_Usage_2018"],
share7 = country_data_imp[8,"Normalised_Usage_2018"], share8 = country_data_imp[9,"Normalised_Usage_2018"],
share9 = country_data_imp[10,"Normalised_Usage_2018"], share_nEU = 1 - sum(country_data_imp[2:10,"Normalised_Usage_2018"]),
betaAA = MAP_parms["betaAA", 2], phi = MAP_parms["phi", 2], kappa = MAP_parms["kappa", 2], alpha = MAP_parms["alpha", 2],
zeta = MAP_parms["zeta", 2], betaHA = MAP_parms["betaHA", 2], imp_nEU = MAP_parms["imp_nEU", 2], propres_impnEU = MAP_parms["propres_impnEU", 2],
fracimp1 = country_data_imp[2,"FBD_gen"], fracimp2 = country_data_imp[3,"FBD_gen"], fracimp3 = country_data_imp[4,"FBD_gen"],
fracimp4 = country_data_imp[5,"FBD_gen"], fracimp5 = country_data_imp[6,"FBD_gen"], fracimp6 = country_data_imp[7,"FBD_gen"],
fracimp7 = country_data_imp[8,"FBD_gen"], fracimp8 = country_data_imp[9,"FBD_gen"],
fracimp9 = country_data_imp[9,"FBD_gen"], fracimp_nEU = country_data_imp[10,"FBD_gen"],
propres_imp1 = country_data_imp[2,"FBD_res"], propres_imp2 = country_data_imp[3,"FBD_res"], propres_imp3 = country_data_imp[4,"FBD_res"], propres_imp4 = country_data_imp[5,"FBD_res"],
propres_imp5 = country_data_imp[6,"FBD_res"], propres_imp6 = country_data_imp[7,"FBD_res"], propres_imp7 = country_data_imp[8,"FBD_res"], propres_imp8 = country_data_imp[9,"FBD_res"],
propres_imp9 = country_data_imp[10,"FBD_res"],
eta = 0.11016, tau = parmtau[i])
out <- runsteady(y = init, func = amrimp, times = c(0, Inf), parms = parms)
temp[1,1] <- parmtau[i]
print(out[[1]][10])
temp[1,2:12] <- out[[1]][seq(6, 26, by = 2)]/ sum(out[[1]][5:26])
temp[1,13:23] <- sapply(seq(5,25, by = 2), function(x) out[[1]][x]) + sapply(seq(6,26, by = 2), function(x) out[[1]][x])
temp[1,24] <- sum(out[[1]][seq(6, 26, by = 2)])/ sum(out[[1]][5:26])
temp[1,25] <- out[[1]][3] / sum(out[[1]][2:3])
temp[1,26] <- sum(out[[1]][2:3])
print(paste0("Run ", j, ": ",temp[1,2]))
output2 <- rbind.data.frame(output2, temp)
}
colnames(output2)[1:26] <- c("tau",
"PropRes_Domestic","PropRes_Netherlands","PropRes_Ireland","PropRes_Germany","PropRes_France","PropRes_Spain","PropRes_Italy",
"PropRes_Belgium","PropRes_Poland","PropRes_Denmark","PropRes_NonEU",
"TotInf_Domestic","TotInf_Netherlands","TotInf_Ireland","TotInf_Germany","TotInf_France","TotInf_Spain","TotInf_Italy",
"TotInf_Belgium","TotInf_Poland","TotInf_Denmark","TotInf_NonEU",
"Res_PropHum", "Res_PropAnim", "Anim_Inf")
return(output2)
})
}
parmtau <- seq(0, 0.01, by = 0.001)
init = c(Sa=0.98, Isa=0.01, Ira=0.01,
Sh = 1,
IshDA = 0,IrhDA = 0,
IshA1 = 0,IrhA1 = 0,
IshA2 = 0,IrhA2 = 0,
IshA3 = 0,IrhA3 = 0,
IshA4 = 0,IrhA4 = 0,
IshA5 = 0,IrhA5 = 0,
IshA6 = 0,IrhA6 = 0,
IshA7 = 0,IrhA7 = 0,
IshA8 = 0,IrhA8 = 0,
IshA9 = 0,IrhA9 = 0,
IshAnEU = 0,IrhAnEU = 0)
output2 <- data.frame(matrix(ncol = 26, nrow = 0))
plot_analysis <- list()
for (j in 1:2) {
parmtau <- list(melt_amp_pigs$Usage,
seq(0, 0.014, by = 0.001))[[j]]
plot_analysis[[j]] <- local({
for (i in 1:length(parmtau)) {
temp <- data.frame(matrix(NA, nrow = 1, ncol=26))
parms = c(ra = 60^-1, rh = (5.5^-1), ua = 240^-1, uh = 28835^-1, psi = 0.656,
share1 = country_data_imp[2,"Normalised_Usage_2018"], share2 = country_data_imp[3,"Normalised_Usage_2018"], share3 = country_data_imp[4,"Normalised_Usage_2018"],
share4 = country_data_imp[5,"Normalised_Usage_2018"], share5 = country_data_imp[6,"Normalised_Usage_2018"], share6 = country_data_imp[7,"Normalised_Usage_2018"],
share7 = country_data_imp[8,"Normalised_Usage_2018"], share8 = country_data_imp[9,"Normalised_Usage_2018"],
share9 = country_data_imp[10,"Normalised_Usage_2018"], share_nEU = 1 - sum(country_data_imp[2:10,"Normalised_Usage_2018"]),
betaAA = MAP_parms["betaAA", 2], phi = MAP_parms["phi", 2], kappa = MAP_parms["kappa", 2], alpha = MAP_parms["alpha", 2],
zeta = MAP_parms["zeta", 2], betaHA = MAP_parms["betaHA", 2], imp_nEU = MAP_parms["imp_nEU", 2], propres_impnEU = MAP_parms["propres_impnEU", 2],
fracimp1 = country_data_imp[2,"FBD_gen"], fracimp2 = country_data_imp[3,"FBD_gen"], fracimp3 = country_data_imp[4,"FBD_gen"],
fracimp4 = country_data_imp[5,"FBD_gen"], fracimp5 = country_data_imp[6,"FBD_gen"], fracimp6 = country_data_imp[7,"FBD_gen"],
fracimp7 = country_data_imp[8,"FBD_gen"], fracimp8 = country_data_imp[9,"FBD_gen"],
fracimp9 = country_data_imp[9,"FBD_gen"], fracimp_nEU = country_data_imp[10,"FBD_gen"],
propres_imp1 = country_data_imp[2,"FBD_res"], propres_imp2 = country_data_imp[3,"FBD_res"], propres_imp3 = country_data_imp[4,"FBD_res"], propres_imp4 = country_data_imp[5,"FBD_res"],
propres_imp5 = country_data_imp[6,"FBD_res"], propres_imp6 = country_data_imp[7,"FBD_res"], propres_imp7 = country_data_imp[8,"FBD_res"], propres_imp8 = country_data_imp[9,"FBD_res"],
propres_imp9 = country_data_imp[10,"FBD_res"],
eta = 0.11016, tau = parmtau[i])
out <- runsteady(y = init, func = amrimp, times = c(0, Inf), parms = parms)
temp[1,1] <- parmtau[i]
#print(out[[1]][10])
print(sum(out[[1]][5:26]))
temp[1,2:12] <- out[[1]][seq(6, 26, by = 2)]/ sum(out[[1]][5:26])
temp[1,13:23] <- sapply(seq(5,25, by = 2), function(x) out[[1]][x]) + sapply(seq(6,26, by = 2), function(x) out[[1]][x])
temp[1,24] <- sum(out[[1]][seq(6, 26, by = 2)])/ sum(out[[1]][5:26])
temp[1,25] <- out[[1]][3] / sum(out[[1]][2:3])
temp[1,26] <- sum(out[[1]][2:3])
print(paste0("Run ", j, ": ",temp[1,2]))
output2 <- rbind.data.frame(output2, temp)
}
colnames(output2)[1:26] <- c("tau",
"PropRes_Domestic","PropRes_Netherlands","PropRes_Ireland","PropRes_Germany","PropRes_France","PropRes_Spain","PropRes_Italy",
"PropRes_Belgium","PropRes_Poland","PropRes_Denmark","PropRes_NonEU",
"TotInf_Domestic","TotInf_Netherlands","TotInf_Ireland","TotInf_Germany","TotInf_France","TotInf_Spain","TotInf_Italy",
"TotInf_Belgium","TotInf_Poland","TotInf_Denmark","TotInf_NonEU",
"Res_PropHum", "Res_PropAnim", "Anim_Inf")
return(output2)
})
}
